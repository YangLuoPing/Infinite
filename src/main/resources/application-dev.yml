#server:
#  port: 8888
#  servlet:
#    context-path: /origin  # 项目名称
#  compression:
#    enabled: true
#    min-response-size: 1024
#    mime-types: application/javascript,application/json,application/xml,text/html,text/xml,text/plain,text/css,image/*
spring:
  mvc:
    # 以什么样的路径来访问静态资源,这表示只有静态资源的访问路径为/static/ 时才会处理
    static-path-pattern: /**
  #    view:
  #      suffix: .ftl
  #    date-format: yyyy-MM-dd  # 日期格式
  resources:
    # 告诉Spring Boot应该在何处查找静态资源文件,查找文件时会依赖于配置的先后顺序依次进行
    static-locations: classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/
  autoconfigure:
    #  排除 原生Druid的快速配置类。在SpringBootApplication排除也可以
    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure
  datasource:
    dynamic:
      druid:
        stat-view-servlet:
          enabled: true
          loginUsername: root #后台管理界面的登录账号
          loginPassword: root #后台管理界面的登录密码
          allow:  # 为空或者为null时，表示允许所有访问
        web-stat-filter:
          # 添加过滤规则
          url-pattern: /druid/*
          # 忽略过滤格式
          exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
        # 连接池的配置信息
        # 初始化大小，最小，最大
        initial-size: 5
        min-idle: 5
        maxActive: 20
        # 配置获取连接等待超时的时间
        maxWait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 300000
        #validationQuery: SELECT 1 FROM DUAL
        testWhileIdle: true #指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.
        testOnBorrow: false #借出连接时不要测试，否则很影响性能
        testOnReturn: false #归还连接时执行validationQuery检测连接是否有效
        # 打开PSCache，并且指定每个连接上PSCache的大小
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        #配置监控统计拦截的filters，stat:监控统计、log4j：日志记录、wall：防御sql注入
        #如果允许时报错  java.lang.ClassNotFoundException: org.apache.log4j.Priority
        #则导入 log4j 依赖即可，Maven 地址：https://mvnrepository.com/artifact/log4j/log4j
        filters: stat,wall,slf4j
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000

      primary: master #设置默认的数据源或者数据源组,默认值即为master
      strict: false #设置严格模式,默认false不启动. 启动后在未匹配到指定数据源时候回抛出异常,不启动会使用默认数据源.
      datasource:
        master:
          url: jdbc:mysql://localhost:3308/origin?useSSL=false&useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8
          username: root
          password: root
          driver-class-name: com.mysql.cj.jdbc.Driver
        slave_tempo:
          url: jdbc:oracle:thin:@localhost:1521:orcl
          username: Tempo
          password: Tempo
          driver-class-name: oracle.jdbc.driver.OracleDriver
        slave_produce:
          url: jdbc:oracle:thin:@localhost:1521:orcl
          username: producemanager
          password: merit
          driver-class-name: oracle.jdbc.driver.OracleDriver
      p6spy: true # 启用p6spy相关配置,默认false,建议线上关闭。
    #配置监控统计拦截的filters，stat:监控统计、log4j：日志记录、wall：防御sql注入
    #如果允许时报错  java.lang.ClassNotFoundException: org.apache.log4j.Priority
    #则导入 log4j 依赖即可，Maven 地址：https://mvnrepository.com/artifact/log4j/log4j
    filters: stat,wall,log4j
    maxPoolPreparedStatementPerConnectionSize: 20
    useGlobalDataSourceStat: true
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
    url: jdbc:mysql://localhost:3308/origin?useSSL=false&useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
  freemarker:
    cache: false
    charset: UTF-8
    content-type: text/html
    suffix: .ftl
    template-loader-path: classpath:/ftl/
    check-template-location: true
    template-resolver-order: 10
  thymeleaf:  # 模板引擎thymeleaf
    cache: false  # 热部署
    mode: HTML
    encoding: UTF-8
    prefix: classpath:/templates/
    suffix: .html
    template-resolver-order: 1

#mybatis plus 设置
mybatis-plus:
  mapper-locations: classpath*:com/base/**/*Mapper.xml
  type-aliases-package: com.base.**.entity
  configuration:
    #    打印sql日志
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: deleted #全局逻辑删除字段值  有 @TableLogic 则以实体上的为准，忽略全局。 即先查找注解再查找全局，都没有则此表没有逻辑删除
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)
  type-enums-package: com.base.utils.dict
# 启用 Dataway 功能（默认不启用）
HASOR_DATAQL_DATAWAY: true
# 开启 ui 管理功能（注意生产环境必须要设置为 false，否则会造成严重的生产安全事故）
HASOR_DATAQL_DATAWAY_ADMIN: true
# （可选）API工作路径
HASOR_DATAQL_DATAWAY_API_URL: /api/
# （可选）ui 的工作路径，只有开启 ui 管理功能后才有效
HASOR_DATAQL_DATAWAY_UI_URL: /dataway-ui/




project:
  uploadPath: ./file/
  imagePath: ./image/
  isDayType: false



# yml练习
person:
  name: ${random.uuid} # 随机uuid
  age: ${random.int}  # 随机int
  happy: false
  birth: 2020/04/04
  email: 168@qq.com
  maps: {k1: v1,k2: v2}
  lists:
    - code
    - music
    - girl
  dog:
    name: 旺财
    age: 3